% Create Synthetic Files

% © All rights reserved. 
% ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE, Switzerland, 
% Interdisciplinary Laboratory of Performance-Integrate Design, 2016
% Parag Rastogi
% See the LICENSE.TXT file for more details.


function  OutputTable = WeatherFileParseEPWMeteonorm(FileName,varargin)

% The second input is to ask the parser to add three columns at the end of
% the data file or not.
% The output table from METENORM files has 32 columns. The EPW files have
% three extra columns. Enable the following lines if you want to revert to
% number of columns in EPW file. Currently, EPW file parser ignores the
% last three columns.

p = inputParser;
p.FunctionName = 'WeatherFileParseEPWMeteonorm';

addRequired(p,'FileName', @(x) (ischar(x) || (iscell(x) ...
    && length(x)==1)))
addParameter(p,'ExtraCols',false,@islogical)

parse(p,FileName, varargin{:})

% If input file name is a cell, convert to string.
if iscell(p.Results.FileName)
    FileName = char(p.Results.FileName);
else
    FileName = p.Results.FileName;
end

ExtraCols = p.Results.ExtraCols;

% Warning ID generated by readtable when it has to change incompatible
% variable names
warnid= 'MATLAB:table:ModifiedVarnames';
warning('off',warnid)

% Check if file input ends with 'EPW' extension
if ~strcmpi(FileName(end-3:end),'.epw')
    fprintf('Input File Name is not an EPW file. Please try again.\n');
    OutputTable = array2table(NaN*ones(8760,33));
    return
end

% Names for the variables, from standardised list based on DOE EPW format
VarNames = {'Year', 'Month', 'Day', 'Hour', 'Minute', 'QualFlags', ...
    'TDB', 'TDP', 'RH', 'ATMPR', 'ETRH', 'ETRN', 'HIR', 'GHI',...
    'DNI', 'DHI', 'GHE', 'DNE', 'DHE', 'ZL', 'WDR', 'WSPD', 'TSKY',...
    'OSKY', 'VIS', 'CHGT', 'PWO', 'PWC', 'PWT', 'AOPT', 'SDPT',...
    'SLAST'};
% Units for the variables, from standardised list based on DOE EPW format
VarUnits = {'','','','','','','C','C','%','Pa','Wh/m2','Wh/m2',...
    'Wh/m2','Wh/m2','Wh/m2','Wh/m2','lux','lux','lux','Cd/m2',...
    'degrees','m/s','dimless','dimless', 'km', 'm', 'dimless',...
    'dimless','mm','thousandths','cm','days'};

% Read file
OutputTable = readtable(FileName, 'FileType', 'text', 'HeaderLines',...
    8,'Delimiter', ',', 'ReadVariableNames',0);


% Assign variable names and units to table
if size(OutputTable,2)>length(VarNames)
	randints = (randsample(10:100, ...
		size(OutputTable,2)-length(VarNames)))';
	newnames = strcat((repmat({'unknown'}, ...
		size(OutputTable,2)-length(VarNames),1)), ...
		cellstr(num2str(randints)));
	VarNames = [VarNames, newnames'];
	VarUnits = [VarUnits, newnames'];
end
OutputTable.Properties.VariableNames = VarNames;
OutputTable.Properties.VariableUnits = VarUnits;

% This block of code gives one the ability to specify if the output should
% have the last three dummy variables commonly found in EPW files from the
% EPlus web site.
if ExtraCols
    % [~,w] = size(OutputTable);
    ExtraCols = array2table([999*ones(8760,1),...
        999*ones(8760,1), 99*ones(8760,1)]);
    % Headers and units for unknown columns
    VarNamesExtra = {'Unknown1', 'Unknown2', 'Unknown3'};
    ExtraCols.Properties.VariableNames = VarNamesExtra;
    VarUnitsExtra = {'','',''};
    ExtraCols.Properties.VariableUnits = VarUnitsExtra;
    OutputTable = [OutputTable, ExtraCols];
    fprintf('Data Table from this call to the METEONORM parser ')
    fprintf('has 35 columns.\n')
end


% Attach descriptions for identification
OutputTable.Properties.Description = 'METEONORM';

end
